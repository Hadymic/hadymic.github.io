<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记搭建Blog中遇到的那些事儿</title>
    <link href="/2020/05/28/%E8%AE%B0%E6%90%AD%E5%BB%BABlog%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <url>/2020/05/28/%E8%AE%B0%E6%90%AD%E5%BB%BABlog%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="从0开始建站"><a href="#从0开始建站" class="headerlink" title="从0开始建站"></a><del>从0开始建站</del></h1><p>本博客采用了<code>Hexo + Github Pages</code>的方案（主要是不花钱）。关于<code>Hexo</code>的主题，在<code>GitHub</code>中经过多番挑选，最终选用了<code>Fluid</code>。网上教程那么多，这里就不详述了，主要想记录一下搭建过程中遇到的问题。</p><h1 id="Git与SSH"><a href="#Git与SSH" class="headerlink" title="Git与SSH"></a>Git与SSH</h1><p>网上很多教程都配置了以<code>SSH</code>的方式连接<code>Github</code>仓库，但在<code>_config.yml</code>中却依旧使用<code>HTTPS</code>的方式进行连接。这就导致了配置完成后即便以<code>SSH</code>连接<code>Github</code>成功，出现以下代码即为成功。</p><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh -T git@github.com</span>Hi Hadymic! You've successfully authenticated, but GitHub does not provide shell access.</code></pre><p>在部署到<code>Github</code>上时依旧提示账号登录，所以在<code>_config.yml</code>中需要使用<code>SSH</code>的方式进行连接。</p><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>  <span class="hljs-attr">repo:</span>     <span class="hljs-attr">github:</span> <span class="hljs-string">git@github.com:Hadymic/hadymic.github.io.git</span>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span></code></pre><h1 id="Fluid主题修改"><a href="#Fluid主题修改" class="headerlink" title="Fluid主题修改"></a>Fluid主题修改</h1><h2 id="首页Slogan改为一言"><a href="#首页Slogan改为一言" class="headerlink" title="首页Slogan改为一言"></a>首页Slogan改为一言</h2><p><img src="https://cdn.jsdelivr.net/gh/Hadymic/PersonalPicBed/img/%E9%A6%96%E9%A1%B5%E4%B8%80%E8%A8%80%E5%B1%95%E7%A4%BA.gif" srcset="/img/loading.gif" alt="首页一言展示"></p><p>主要有两个想法，首页Slogan改为一言，同时保留打字机的效果。</p><p>由于个人前端水平有限，只能用些暴力的方法实现（能用就行）。</p><p>需要修改的文件有两个，目录如下</p><pre><code class="hljs plain">typed.ejs : &#x2F;themes&#x2F;fluid&#x2F;layout&#x2F;_partial&#x2F;plugins&#x2F;typed.ejsfluid_config.yml : &#x2F;source&#x2F;_data&#x2F;fluid_config.yml</code></pre><p>在<code>fluid_config.yml</code>的<code>index</code>下增加一行</p><pre><code class="hljs yml"><span class="hljs-attr">index:</span>  <span class="hljs-string">...</span>  <span class="hljs-attr">slogan:</span>  <span class="hljs-comment"># 首页副标题的独立设置</span>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 为 false 则不显示任何内容</span>    <span class="hljs-attr">hitokoto:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 为 true 则启用一言</span>    <span class="hljs-attr">text:</span>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span></code></pre><p>将<code>typed.ejs</code>如下更改</p><pre><code class="hljs ejs">&lt;% if(theme.fun_features.typing.enable)&#123; %&gt;  &lt;%- js_ex(theme.static_prefix.typed, &quot;&#x2F;typed.min.js&quot;) %&gt;  &lt;script&gt;    if (&lt;%- theme.index.slogan.hitokoto %&gt; &amp;&amp; &quot;&lt;%- data.subtitle %&gt;&quot; &#x3D;&#x3D; &quot;&quot;) &#123;      fetch(&#39;https:&#x2F;&#x2F;v1.hitokoto.cn&#39;)          .then(response &#x3D;&gt; response.json())          .then(data &#x3D;&gt; &#123;            var typed &#x3D; new Typed(&#39;#subtitle&#39;, &#123;              strings: [                &#39;  &#39;,                data.hitokoto + &quot;&amp;nbsp;&quot;,              ],              cursorChar: &quot;&lt;%- theme.fun_features.typing.cursorChar %&gt;&quot;,              typeSpeed: &lt;%- theme.fun_features.typing.typeSpeed %&gt;,              loop: &lt;%- theme.fun_features.typing.loop %&gt;,            &#125;);          &#125;)            .catch(console.error)    &#125; else &#123;      var typed &#x3D; new Typed(&#39;#subtitle&#39;, &#123;        strings: [          &#39;  &#39;,          &quot;&lt;%- data.subtitle %&gt;&amp;nbsp;&quot;,        ],        cursorChar: &quot;&lt;%- theme.fun_features.typing.cursorChar %&gt;&quot;,        typeSpeed: &lt;%- theme.fun_features.typing.typeSpeed %&gt;,        loop: &lt;%- theme.fun_features.typing.loop %&gt;,      &#125;);    &#125;    typed.stop();    $(document).ready(function () &#123;      $(&quot;.typed-cursor&quot;).addClass(&quot;h2&quot;);      typed.start();    &#125;);  &lt;&#x2F;script&gt;&lt;% &#125; %&gt;</code></pre><p>效果在本博客首页也看到了。</p><p>如果还有其他需要，在本博客的<code>Github</code>项目下的<code>dev</code>分支保存了所有源代码。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/05/28/hello-world/"/>
    <url>/2020/05/28/hello-world/</url>
    
    <content type="html"><![CDATA[<a id="more"></a> #首先这是一个摘要分割符<p>#这是一级标题<br>##这是二级标题<br>###这是三级标题<br>####这是四级标题<br>…<br><img src="url" srcset="/img/loading.gif" alt="图片详情" title="{图片占位符}">    #这是放置一个图片</p><ul><li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code>    #这是服务列表<br>&nbsp;    #设置缩进之一个空格</li></ul><p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p><p>超链接还是<a href=""></a>比较好用</p><p>我经常去的几个网站<a href="http://www.google.com" target="_blank" rel="noopener">Google</a>、<a href="http://www.leanote.com" target="_blank" rel="noopener">Leanote</a>。    #参考链接</p><p>使用 Markdown<a href="Markdown是一种纯文本标记语言">^1</a>可以效率的书写文档, 直接转换成 HTML[^2]。    #注脚/引用来源</p><p>[^2]:HyperText Markup Language 超文本标记语言</p><h2 id="0-目录-描至页面的其他部分"><a href="#0-目录-描至页面的其他部分" class="headerlink" title="0. 目录    #描至页面的其他部分"></a>0. 目录    #描至页面的其他部分</h2><ul><li>无序列表项 一    #无序列表</li></ul><ul><li>无序列表项 二</li></ul><ul><li>无序列表项 三</li></ul><ol><li>有序列表项 一    #有序列表</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><blockquote><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白    #多级引用<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><p>#代码</p><pre><code class="hljs plain">include &lt;stdio.h&gt;int main(void)&#123;    printf(&quot;Hello world\n&quot;);&#125;</code></pre><pre><code class="hljs plain">graph LR    #流程图A--&gt;B</code></pre><pre><code class="hljs plain">sequenceDiagram    #消息列表A-&gt;&gt;B: How are you?B-&gt;&gt;A: Great!</code></pre><p>|学号|姓名|序号|    #表格<br>|-|-|-|<br>|小明明|男|5|<br>|小红|女|79|<br>|小陆|男|192|</p><p><code>$ {equation} $</code>    #行内公式</p><p>$$ 公式 $$   #整行公式</p><pre><code class="hljs math">x &#x3D; \dfrac&#123;-b \pm \sqrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125;</code></pre><pre><code class="hljs math">[\frac&#123;1&#125;&#123;\Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;\frac25 \pi&#125;&#125; &#x3D;1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-6\pi&#125;&#125;&#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\ldots&#125; &#125; &#125; &#125;]</code></pre><p>#分割线</p><hr><hr><hr><hr><hr><p>#特殊字符的使用<br>特殊字符     描述     字符的代码<br>    空格符     &nbsp;<br>&lt;     小于号     &lt;</p><blockquote><pre><code>大于号     &gt;</code></pre><p>&amp;     和号     &amp;<br>￥     人民币     &yen;<br>©     版权     &copy;<br>®     注册商标     &reg;<br>°C     摄氏度     &deg;C<br>±     正负号     &plusmn;<br>×     乘号     &times;<br>÷     除号     &divide;<br>²     平方（上标²）     &sup2;<br>³     立方（上标³）     &sup3;</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
